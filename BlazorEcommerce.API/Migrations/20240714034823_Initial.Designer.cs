// <auto-generated />
using BlazorEcommerce.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorEcommerce.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240714034823_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorEcommerce.API.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "fas fa-spa",
                            Name = "Mouse"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "fas fa-spa",
                            Name = "Keyboard"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "fas fa-spa",
                            Name = "Headset"
                        });
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Get work done with the black colored Logitech MX Master 3 Wireless Mouse by your side",
                            ImageUrl = "/Images/LogitechMXMaster3Wireless.png",
                            Name = "Logitech MX Master 3 Wireless",
                            Price = 100m,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "The Magic Mouse 2 is completely rechargeable, so you’ll eliminate the use of traditional batteries.",
                            ImageUrl = "/Images/AppleMagicMouse2.png",
                            Name = "Apple Magic Mouse 2",
                            Price = 79m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "The DeathAdder V2 features the fastest, most reliable optical sensor in the industry.",
                            ImageUrl = "/Images/RazerDeathAdderV2.png",
                            Name = "Razer DeathAdder V2",
                            Price = 69m,
                            Quantity = 80
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "The Corsair Ironclaw RGB Wireless boasts a 18,000 DPI optical sensor for precision and accuracy.",
                            ImageUrl = "/Images/CorsairIronclawRGBWireless.png",
                            Name = "Corsair Ironclaw RGB Wireless",
                            Price = 79m,
                            Quantity = 60
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "The Rival 600 gaming mouse features a 12,000 CPI TrueMove3+ Dual Optical Sensor for ultra-low-latency tracking.",
                            ImageUrl = "/Images/SteelSeriesRival600.png",
                            Name = "SteelSeries Rival 600",
                            Price = 89m,
                            Quantity = 70
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "The Logitech G502 Hero features the advanced optical sensor for maximum tracking accuracy.",
                            ImageUrl = "/Images/LogitechG502Hero.png",
                            Name = "Logitech G502 Hero",
                            Price = 79m,
                            Quantity = 65
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "The Razer BlackWidow Elite mechanical gaming keyboard offers full RGB customization.",
                            ImageUrl = "/Images/RazerBlackWidowElite.png",
                            Name = "Razer BlackWidow Elite",
                            Price = 129m,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Description = "The Corsair K95 RGB Platinum XT mechanical gaming keyboard features CHERRY MX keyswitches and a detachable wrist rest.",
                            ImageUrl = "/Images/CorsairK95RGBPlatinumXT.png",
                            Name = "Corsair K95 RGB Platinum XT",
                            Price = 179m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Description = "The Logitech G Pro X mechanical gaming keyboard comes with swappable pro-grade switches.",
                            ImageUrl = "/Images/LogitechGProXMechanicalKeyboard.png",
                            Name = "Logitech G Pro X Mechanical Keyboard",
                            Price = 149m,
                            Quantity = 35
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Description = "The Magic Keyboard combines a sleek design with a built-in rechargeable battery.",
                            ImageUrl = "/Images/AppleMagicKeyboard.png",
                            Name = "Apple Magic Keyboard",
                            Price = 99m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            Description = "The SteelSeries Apex Pro mechanical gaming keyboard features adjustable mechanical switches for customizable actuation.",
                            ImageUrl = "/Images/SteelSeriesApexPro.png",
                            Name = "SteelSeries Apex Pro",
                            Price = 199m,
                            Quantity = 25
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Description = "The Ducky One 2 Mini mechanical keyboard offers a compact 60% layout with customizable RGB lighting.",
                            ImageUrl = "/Images/DuckyOne2Mini.png",
                            Name = "Ducky One 2 Mini",
                            Price = 119m,
                            Quantity = 20
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Description = "The HyperX Alloy Origins Core mechanical gaming keyboard features HyperX Red switches and customizable RGB lighting.",
                            ImageUrl = "/Images/HyperXAlloyOriginsCore.png",
                            Name = "HyperX Alloy Origins Core",
                            Price = 89m,
                            Quantity = 45
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            Description = "The SteelSeries Arctis 7 Wireless gaming headset features 2.4GHz wireless connectivity and ClearCast microphone.",
                            ImageUrl = "/Images/SteelSeriesArctis7Wireless.png",
                            Name = "SteelSeries Arctis 7 Wireless",
                            Price = 149m,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            Description = "The HyperX Cloud II gaming headset comes with 7.1 virtual surround sound and a detachable microphone.",
                            ImageUrl = "/Images/HyperXCloudII.png",
                            Name = "HyperX Cloud II",
                            Price = 99m,
                            Quantity = 40
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 3,
                            Description = "The Logitech G Pro X gaming headset features Blue Voice microphone technology for clear communication.",
                            ImageUrl = "/Images/LogitechGProXGamingHeadset.png",
                            Name = "Logitech G Pro X Gaming Headset",
                            Price = 129m,
                            Quantity = 35
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 3,
                            Description = "The Corsair HS70 Wireless gaming headset offers 2.4GHz wireless connectivity and custom-tuned 50mm neodymium speaker drivers.",
                            ImageUrl = "/Images/CorsairHS70Wireless.png",
                            Name = "Corsair HS70 Wireless",
                            Price = 99m,
                            Quantity = 25
                        });
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bob Foo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "John Bar"
                        });
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.Cart", b =>
                {
                    b.HasOne("BlazorEcommerce.API.Entities.User", null)
                        .WithOne("Cart")
                        .HasForeignKey("BlazorEcommerce.API.Entities.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.CartItem", b =>
                {
                    b.HasOne("BlazorEcommerce.API.Entities.Cart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorEcommerce.API.Entities.Product", "Product")
                        .WithMany("Items")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.Product", b =>
                {
                    b.HasOne("BlazorEcommerce.API.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.Cart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.Product", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("BlazorEcommerce.API.Entities.User", b =>
                {
                    b.Navigation("Cart");
                });
#pragma warning restore 612, 618
        }
    }
}
